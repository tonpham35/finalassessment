<div style="float: right;">
  <%= link_to 'Back', users_index_path %>
</div>
<h2 class="text-center"> Your Investment in <%= @investment.symbol %> </h2>

<div class ="row" style="margin:10px 2px 4px 10px;">
  <div class="col-xs-12" style="margin-top: 2px; font-size: 20px;"><b>Symbol: </b><%= @investment.symbol %></div>
  <div class="col-xs-12 col-sm-6 col-md-4" style="margin-top: 2px; font-size: 20px;"><b>Cost: </b><%= '$' + number_with_delimiter(@investment.cost.round(0), :delimiter => ',').to_s %></div>
  <div class="col-xs-12 col-sm-6 col-md-4" style="margin-top: 2px; font-size: 20px;"><b>Market Value: </b><span id="marketValue$"><img src="/assets/kloader.gif" id='loader'></span></div>
  <div class="col-xs-12 col-sm-6 col-md-4" style="margin-top: 2px; font-size: 20px;"><b>Closing/Current Price: </b><span id="closingPriceSpan"><img src="/assets/kloader.gif" id='loader'></span></div>
  <div class="col-xs-12 col-sm-6 col-md-4" style="margin-top: 2px; font-size: 20px;"><b>Day Gain($): </b><span id="dayChange$"><img src="/assets/kloader.gif" id='loader'></span></div>
  <div class="col-xs-12 col-sm-6 col-md-4" style="margin-top: 2px; font-size: 20px;"><b>Day Gain(%): </b><span id="dayChange%"><img src="/assets/kloader.gif" id='loader'></div>
  <div class="col-xs-12 col-sm-6 col-md-4" style="margin-top: 2px; font-size: 20px;"><b>Total Gain($): </b><span id="gain$"><img src="/assets/kloader.gif" id='loader'></div>
  <div class="col-xs-12 col-sm-6 col-md-4" style="margin-top: 2px; font-size: 20px;"><b>Total Gain(%): </b><span id="gain%"><img src="/assets/kloader.gif" id='loader'></span></div>
</div>

<div class ='text-center' style="height: 400px; width: 90%;">
  <canvas id="myChart" width="100%" height="100"></canvas>
</div>
<script>
  $(document).ready(function() {

    <% days = (DateTime.now.to_date - @investment.purchasedate.to_s.split(' ')[0].to_date).to_i %>
    <% if days > 135 %>
      <% size = "full" %>
    <% else %>
      <% size = "compact" %>
    <% end %>

    console.log(<%= days %>)

    var requestURL = 'https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=<%= @investment.symbol %>&outputsize=<%= size %>&apikey=N6WB2563ACVSGIJV';

    var request = new XMLHttpRequest();

    request.open('GET', requestURL);

    request.responseType = 'json';

    request.send();

    request.onload = function() {
      var api = request.response;
      var dates = Object.keys(api["Time Series (Daily)"]);

      var start = "<%= @investment.purchasedate.to_s.split(' ')[0] %>";

      var label = [];
      var datapoints = [];
      var date;
      var points;

      var i = 0;
      while (date != start) {
        date = dates[i];
        points = api["Time Series (Daily)"][date]["4. close"]*<%= @investment.quantity %>;
        label.push(date);
        datapoints.push(points)
        i++;
      }

      var closingPrice = api["Time Series (Daily)"][dates[0]]["4. close"];
      var openingPrice = api["Time Series (Daily)"][dates[0]]["1. open"];

      var dayChangeDollar = closingPrice - openingPrice; 
      var dayChangePercent = (dayChangeDollar / openingPrice) * 100;
      var marketValue = closingPrice * <%= @investment.quantity %>
      document.getElementById("closingPriceSpan").innerHTML = addCommas((1 * closingPrice).toFixed(2));
      document.getElementById("dayChange$").innerHTML = dayChangeDollar.toFixed(3);
      document.getElementById("dayChange%").innerHTML = dayChangePercent.toFixed(3);
      document.getElementById("marketValue$").innerHTML = addCommas2(marketValue);
      document.getElementById("gain$").innerHTML = addCommas((marketValue.toFixed(2) - <%= @investment.cost %>).toFixed(2));
      document.getElementById("gain%").innerHTML = (100 * (( marketValue.toFixed(2) - <%= @investment.cost %> ) / <%= @investment.cost %>)).toFixed(3);

      var canvas = document.getElementById('myChart');
      canvas.height = 40;

      var data = {
          labels: label.reverse(),
          datasets: [
              {
                  label: "<%= @investment.symbol %> Performance",
                  fill: true,
                  lineTension: 0.1,
                  backgroundColor: "rgba(75,192,192,0.4)",
                  borderColor: "rgba(75,192,192,1)",
                  borderCapStyle: 'butt',
                  borderDash: [],
                  borderDashOffset: 0.0,
                  borderJoinStyle: 'miter',
                  pointBorderColor: "rgba(75,192,192,1)",
                  pointBackgroundColor: "#fff",
                  pointBorderWidth: 1,
                  pointHoverRadius: 5,
                  pointHoverBackgroundColor: "rgba(75,192,192,1)",
                  pointHoverBorderColor: "rgba(220,220,220,1)",
                  pointHoverBorderWidth: 2,
                  pointRadius: 0,
                  pointHitRadius: 10,
                  data: datapoints.reverse()
              }]
      };

      var option = {
        showLines: true
      };
      var myLineChart = Chart.Line(canvas,{
        data:data,
        options:option
      });


    }
  });

  //function to add commas to number
  function addCommas(nStr) {
    nStr += ''; //turns number into a string
    x = nStr.split('.'); //number string becomes an array. if number string has a decimal. the decimal section is split from the string. x[0] is the whole numbers. x[1] is the decimals.
    x1 = x[0]; //x1 is the whole numbers
    x2 = x.length > 1 ? '.' + x[1] : '';
    var rgx = /(\d+)(\d{3})/; //regex to split out the last pairs are 3 from the rear of the number
    while (rgx.test(x1)) {  //loops the rex and adds a comma in between pairs are 3
      x1 = x1.replace(rgx, '$1' + ',' + '$2');
    }
    return '$' + x1 + x2; //returns delimited number and includes a $ in front.
  }

  //function to add commas to number, removes decimal points
  function addCommas2(nStr) {
    nStr += ''; //turns number into a string
    x = nStr.split('.'); //number string becomes an array. if number string has a decimal. the decimal section is split from the string. x[0] is the whole numbers. x[1] is the decimals.
    x1 = x[0]; //x1 is the whole numbers
    x2 = x.length > 1 ? '.' + x[1] : '';
    var rgx = /(\d+)(\d{3})/; //regex to split out the last pairs are 3 from the rear of the number
    while (rgx.test(x1)) {  //loops the rex and adds a comma in between pairs are 3
      x1 = x1.replace(rgx, '$1' + ',' + '$2');
    }
    return '$' + x1; //returns delimited number and includes a $ in front.
  }

</script>
